// Consider an array that has no prime numbers, and none of its elements has any prime digit. It would start with: [1,4,6,8,9,10,14,16,18,..].
// The element at index 1 is 4.

// 12 and 15 are not in the list because 2 and 5 are primes.

// You will be given an integer n and your task will be return the number at that index in the array. For example, solve(1) = 4, 
// as explained above.

// More examples in the test cases.

// Good luck!

// If you like Prime Katas, you will enjoy this Kata: Simple Prime Streaming

function solve(n) {
  let count = 0;
  let incrementor = 1;
  
  var isPrime = num => {
    for(var i = 2, s = Math.sqrt(num); i <= s; i++) {
      if(num % i === 0) return false;
    } return num > 1;
  }
    
  while(count <= n){
    let arr = incrementor.toString().split('').map((x) => {return isPrime(parseInt(x))});
    if(isPrime(incrementor) === false && arr.includes(true) === false){
      count++;
    }
    incrementor++;
  }
  
  return incrementor - 1;
  
};
