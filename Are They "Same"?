// Given two arrays a and b write a function comp(a, b) (compSame(a, b) in Clojure) that checks whether the two arrays have the 
// "same" elements, with the same multiplicities. "Same" means, here, that the elements in b are the elements in a squared, regardless 
// of the order.

function comp(array1, array2){
  if(array1 === null||array2 === null) {
    return false;
  }
  var squares = array1.map((x) => {return x*x});
  var x = squares.sort((a, b) => {return a - b}).join('');
  var y = array2.sort((a, b) => {return a - b}).join('');
  if(x === y) {
    return true;
  }
  else {
    return false;
  }
}
