// choose a text in capital letters including or not digits and non alphabetic characters,

// shift each letter by a given number but the transformed letter must be a letter (circular shift),
// replace each digit by its complement to 9,
// keep such as non alphabetic and non digit characters,
// downcase each letter in odd position, upcase each letter in even position (the first character is in position 0),
// reverse the whole result.
// #Example:

// your text: "BORN IN 2015!", shift 1

// 1 + 2 + 3 -> "CPSO JO 7984!"

// 4 "CpSo jO 7984!"

// 5 "!4897 Oj oSpC"

// With longer passphrases it's better to have a small and easy program. Would you write it?

function playPass(s, n) {
  function decode(char){
    let x = char.charCodeAt(0);
    for(var i = 0; i < n; i++){
      x++;
      if(!String.fromCharCode(x).match(/[A-Za-z]/)){
        x = String.fromCharCode(x).charCodeAt(0) - 26;
      }
    }
    return String.fromCharCode(x);
  }

  let arr = s.toLowerCase().split('');
  for(var i = 0; i < arr.length; i++){
    if(arr[i].match(/[A-Za-z]/)){
      arr[i] = decode(arr[i]);
      if(i % 2 === 0){
        arr[i] = arr[i].toUpperCase();
      }
    }
    if(arr[i].match(/^[0-9]+$/)){
      arr[i] = 9 - arr[i];
    }
  }
  
  s = arr.reverse().join('');
  return s;
}
